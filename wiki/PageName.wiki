#summary This page describes how to use the Android client side of the Senstastic framework to fit your needs.

= Introduction =

Senstastic is a lightweight framework for passive participatory sensing on Android devices. It allows you to schedule code to run at a specified interval on users' devices. That code will most likely use the device's built-in sensors in some way to generate measurement data. Senstastic can easily augment your measurement data with a geographic location (a latitude, longitude pair). Senstastic will save the measurement data to device until a WiFi connection becomes available. The device will then push the measurement data to the Senstastic server.

= Getting Started =

Checkout the SenstasticDemo Android project for a working example of a participatory sensing application called "Noise Mapping" built on the Senstastic framework. The easiest way to use the Senstastic client side is to understand the "Noise Mapping" demo and transform it to fit your needs.

= How does the SenstasticDemo begin to work? =

  # When the user's device boots up, the Android OS broadcasts a BOOT_COMPLETED intent.
  # Your BootCompletedReceiver class, defined in BootCompletedReceiver.java, receives the intent in its onReceive method.
  # In the onReceive method, you start up the Senstastic framework by providing it the URL where you would like to send all your sensor measurements, called the endpoint URL. This is usually a script on the Senstastic server. Then, you schedule which custom SensorService(s) you would like Senstastic to periodically execute.

{{{
public class BootCompletedReceiver extends BroadcastReceiver 
{
	public void onReceive(Context context, Intent intent)
	{
        String senstasticEndpointUrl = context.getString(R.string.senstastic_endpoint_url);
        Senstastic.init(senstasticEndpointUrl);
        Senstastic.schedule(context, VolumeSensorService.class);
	}
}
}}}

= What is a SensorService, and why should I make one? =

...

= Modifying the Senstastic Framework =

Senstastic is a lightweight framework, and you are welcome to modify the framework itself to fit your needs. If you do plan to modify the framework, there are few important items we would to point out.

  # Blah...